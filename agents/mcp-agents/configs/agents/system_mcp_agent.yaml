# System MCP Agent Configuration
# Minimal YAML-only MCP agent using SAM's built-in runner

!include ../shared_config.yaml

apps:
  - name: system_mcp_agent_app
    app_module: solace_agent_mesh.agent.sac.app
    app_base_path: .
    broker:
      <<: *broker_connection
    app_config:
      agent_name: "SystemMCPAgent"
      display_name: "System MCP Agent"
      supports_streaming: true
      model: *general_model
      
      instruction: |
        You are a System MCP Agent that provides system information and process management capabilities.
        You can get system information, manage processes, execute commands, and monitor system resources.
        
        Use the available MCP tools to perform system tasks as requested by users.
        Always provide clear explanations of what you're doing and the results you obtain.
        
        Available capabilities:
        - Get system information (OS, architecture, etc.)
        - List running processes
        - Execute system commands
        - Monitor system resources
        - Get environment variables
        - Check system status
        - Manage system operations
        
        Be careful with system commands and always explain what you're doing.
        Only execute safe commands and avoid destructive operations.
      
      tools:
        - tool_type: mcp
          connection_params:
            type: stdio
            command: "npx"
            args: ["-y", "@modelcontextprotocol/server-system"]
      
      session_service: *default_session_service
      artifact_service: *default_artifact_service
      
      agent_card:
        description: "System information and process management capabilities through MCP integration"
        defaultInputModes: ["text"]
        defaultOutputModes: ["text"]
        skills: [
          "system information",
          "process management",
          "command execution",
          "system monitoring",
          "environment variables",
          "system status"
        ]
      
      agent_card_publishing: { interval_seconds: 10 }
      agent_discovery: { enabled: true }
      inter_agent_communication:
        allow_list: ["*"]
        request_timeout_seconds: 30
